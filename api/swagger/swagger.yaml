swagger: "2.0"
info:
  title: "Chat Bot"
  version: "1.0.0"
host: "localhost:4009"
basePath: "/chat_bot/api/v1"
consumes:
- "application/json"
- "application/x-www-form-urlencoded"
produces:
- "application/json"
schemes:
- "http"
tags:
  - name: user
    description: "user api"
  - name: admin
    description: "admin api"
paths:
  "/user/login":
      post:
        summary: Authenticating user
        parameters: 
          - in: body
            name: user
            description: login user.
            required: true
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                    type: string
                password:
                    type: string
        responses:
          "200":
            description: Sucessfully login
            schema: 
              type: object
              properties:
                id: 
                  type: string
          "400":
            description: Please check your username/password and try again.
  "/user/register":
      post:
        summary: Register new user
        parameters: 
          - in: body
            name: user
            required: true
            description: Register user.
            schema:
              type: object
              required:
                - email
                - password
                - firstName
              properties:
                email:
                    type: string
                password:
                    type: string
                firstName:
                    type: string
                dob:
                    type: string
                mobile:
                    type: string
                profileImage:
                    type: string
        responses:
          "200":
            description: Sucessfully registered user
            schema: 
              type: object
              properties:
                responseCode: 
                  type: string
                responseMessage: 
                  type: string
                userProfile:
                    type: object
                    properties:
                      id:
                        type: string
          "400":
            description: Please fill all required fields and try again.          
            schema: 
              type: object
              properties:
                responseCode: 
                  type: string
                responseMessage: 
                  type: string 
  "/user/currentUser":
      get:
        summary: Reterieve User Details.
        parameters:
        - name: "authorization"
          in: "header"
          required: true
          type: "string"
        responses:
          "200":
            description: Sucessfully get user details.
            schema: 
              type: object
              properties:
                responseCode: 
                  type: string
                responseMessage:
                  type: string
                userProfile:
                    type: object
          "400":
            description: Access Forbidden.          
            schema: 
              type: object
              properties:
                responseCode: 
                  type: string
                responseMessage: 
                  type: string 
  "/user/search_friends":
      get:
        summary: Reterieve User Details.
        parameters:
        - name: "authorization"
          in: "header"
          required: true
          type: "string"
        - name: "search"
          in: "query"
          required: true
          type: "string"
        responses:
          "200":
            description: Sucessfully get user details.
            schema: 
              $ref: "#/definitions/searched"
          "400":
            description: Access Forbidden.          
            schema: 
              type: object
              properties:
                responseCode: 
                  type: number
                responseMessage: 
                  type: string   
  "/user/createRoom":
      post:
        summary: Creating chat room for chat.
        parameters:
        - name: "authorization"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          in: "body"
          description: "reciever details"
          required: true
          schema:
            $ref: "#/definitions/roomCreation"
        responses:
          "201":
            description: Sucessfully get user details.
            schema: 
              type: object
              properties:
                responseCode: 
                  type: number
                responseMessage: 
                  type: string
                roomId:
                  type: string
          "400":
            description: Access Forbidden.          
            schema: 
              type: object
              properties:
                responseCode: 
                  type: number
                responseMessage: 
                  type: string              
  "/user/sendMessage":
      post:
        summary: Sending message.
        parameters:
        - name: "authorization"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          in: "body"
          description: "Message initials"
          required: true
          schema:
            $ref: "#/definitions/MessageInitials"
        responses:
          "200":
            description: Sucessfully get user details.
            schema: 
              type: object
              properties:
                responseCode: 
                  type: number
                responseMessage: 
                  type: string
          "400":
            description: Access Forbidden.          
            schema: 
              type: object
              properties:
                responseCode: 
                  type: number
                responseMessage: 
                  type: string 
  "/user/sendRequest":
      post:
        summary: Sending request.
        parameters:
        - name: "authorization"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          in: "body"
          description: "Message initials"
          required: true
          schema:
            $ref: "#/definitions/sendRequestInitials"
        responses:
          "200":
            description: Sucessfully send.
            schema: 
              type: object
              properties:
                responseCode: 
                  type: number
                responseMessage: 
                  type: string
          "400":
            description: Access Forbidden.          
            schema: 
              type: object
              properties:
                responseCode: 
                  type: number
                responseMessage: 
                  type: string
  "/user/showUserFriendRequests":
      post:
        summary: Getting user all notifications.
        parameters:
        - name: "authorization"
          in: "header"
          required: true
          type: "string"
        responses:
          "200":
            description: User Notifications.
            schema: 
              type: object
              properties:
                responseCode: 
                  type: number
                responseMessage: 
                  type: string  
                data:
                  type: array
                  items:
                    type: object
          "400":
            description: Sucessfully send.
            schema: 
              type: object
              properties:
                responseCode: 
                  type: number
                responseMessage: 
                  type: string  
  "/user/acceptRejectFriendRequests":
      post:
        summary: Performing accept/reject function on notifications.
        parameters:
        - name: "authorization"
          in: "header"
          required: true
          type: "string"
        - name: "body"
          in: "body"
          required: true
          type: "string" 
          schema:
            $ref: "#/definitions/notificationAction"
        responses:
          "200":
            description: User Notifications.
            schema: 
              type: object
              properties:
                responseCode: 
                  type: number
                responseMessage: 
                  type: string  
                data:
                  type: array
                  items:
                    type: object
          "400":
            description: Sucessfully send.
            schema: 
              type: object
              properties:
                responseCode: 
                  type: number
                responseMessage: 
                  type: string
         
definitions:
  searched:
    type: "object"
    properties:
      responseMessage:
        type: string
      responseCode:
        type: number
      data:
        type: array
        items:
          $ref: "#/definitions/Data"
  Data:
    type: "object"
    properties:
      _id:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
  roomCreation:
    type: "object"
    required:
    - "chatType"
    - "members"
    properties:
      chatType:
        type: "string"
        description: "UpperCase"
      members:
        type: "array"
        items:
          type: "string"
  MessageInitials:
    type: object
    required:
    - "roomId"
    - "message"
    - "messageType"
    - "recieverDetails"
    properties:
      roomId:
        type: "string"
      message:
        type: "string"
      messageType: 
        type: "string"
        description: "PERSONAL or GROUP"
      recieverDetails:
        type: "object"
        properties:
          fullName:
            type: "string"
          recieverId:
            type: "string"
  sendRequestInitials:
    type: object
    required:
    - "type"
    - "userId"
    properties:
      type:
        type: "string"
        description: "UpperCase,Chooose from FRIENDREQUEST"
      userId:
        type: "string"
        description: "id of user you are sending request"
  notificationAction:
    type: object
    required: 
    - "notificationId"
    - "action"
    - "uuid"
    properties:
      notificationId:
        type: string
        description: "This will contain the whole notification object id."
      action:
        type: string
        description: "This will contain the Action to be perform i.e- ACCEPTED/REJECT."
      uuid:
        type: string
        description: "This will contains the id of notification sender.Who request to you."
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
          